{"version":3,"sources":["context/authContext.js","hoc/WithAuth.js","hoc/IfAuth.js","hoc/IfNotAuth.js","components/NavBar/NavBar.js","pages/HomePage.js","pages/LoginPage.js","pages/SignupPage.js","pages/LogoutPage.js","hoc/PrivateRoute.js","hoc/UnPrivateRoute.js","context/authProvider.js","App.js","middleware/authService.js","index.js"],"names":["AuthContext","React","createContext","withAuth","ComposedComponent","props","useContext","user","login","updateUser","logout","newUser","children","rest","authState","Children","map","child","cloneElement","NavBar","Navbar","collapseOnSelect","expand","bg","variant","to","className","Toggle","aria-controls","Collapse","Nav","exact","activeClassName","useState","info","setInfo","useEffect","axios","get","client_id","then","res","status","data","console","log","catch","e","Container","JSON","stringify","WithAuth","email","setEmail","password","setPassword","a","request","username","post","response","access","refresh","pathname","Form","Group","Label","Control","type","placeholder","onChange","event","target","value","Button","onClick","SignupPage","invited","setInvited","name","setName","surname","setSurname","signup","invited_by","country_key","phone","push","component","render","location","state","from","storageName","AuthProvider","parse","localStorage","getItem","token","refresh_token","autoLogin","setUser","useCallback","setItem","removeItem","Provider","App","path","LoginPage","LogoutPage","HomePage","AuthServiceMiddleware","this","config","getAuthFromStorage","headers","err","refreshAccessToken","setAuthInStorage","error","clearAuthInStorage","Service","register","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.055a9c6d.chunk.js","sourcesContent":["import React, {useContext} from 'react'\n\nexport const AuthContext = React.createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\n","import React from 'react'\n\nimport {useAuth} from '../context/authContext'\n\nconst withAuth = ComposedComponent => {\n    return ((props) => {\n        const {user, updateUser, login, logout} = useAuth()\n\n          const newUser = {\n                ...user,\n                login: login,\n                logout: logout\n            }\n\n        return <ComposedComponent user={newUser} {...props}/>\n    })\n}\n\nexport default withAuth\n","import React from 'react'\nimport withAuth from './WithAuth'\n\nconst IfAuth = (props) => {\n  const {user, children, ...rest} = props\n\n  if (user.authState)\n    return React.Children.map(children, (child) => {\n        return React.cloneElement(child, {...rest})\n      }\n    )\n  else\n    return null\n}\n\nexport default withAuth(IfAuth)\n","import React from 'react'\nimport withAuth from './WithAuth'\n\nconst IfNotAuth = (props) => {\n  const {user, children, ...rest} = props\n\n  if (!user.authState)\n    return React.Children.map(children, (child) => {\n        return React.cloneElement(child, {...rest})\n      }\n    )\n  else\n    return null\n}\n\nexport default withAuth(IfNotAuth)\n","import React from 'react'\nimport {Link, NavLink} from 'react-router-dom'\nimport {Navbar, Nav} from 'react-bootstrap'\nimport IfAuth from '../../hoc/IfAuth'\nimport IfNotAuth from '../../hoc/IfNotAuth'\n\nconst NavBar = props => {\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Vision web test\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">\n            <IfNotAuth>\n              <NavLink exact to=\"/signup\" activeClassName=\"active\" className=\"nav-link\">Sign Up</NavLink>\n              <NavLink exact to=\"/login\" activeClassName=\"active\" className=\"nav-link\">Login</NavLink>\n            </IfNotAuth>\n\n            <IfAuth>\n              <NavLink exact to=\"/\" activeClassName=\"active\" className=\"nav-link\">Home</NavLink>\n              <NavLink exact to=\"/logout\" activeClassName=\"active\" className=\"nav-link\">Logout</NavLink>\n            </IfAuth>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\n\nexport default NavBar\n","import React, {useEffect, useState} from 'react'\nimport {Container} from 'react-bootstrap'\nimport axios from \"axios\";\nimport withAuth from \"../hoc/WithAuth\";\n\nconst HomePage = props => {\n    const {user} = props\n    const [info, setInfo] = useState()\n\n    //http://erp.apptrix.ru/api/clients/RU-000000/\n    useEffect(() => {\n        axios.get(`http://erp.apptrix.ru/api/clients/${user.client_id}/`)\n            .then(res => {\n                if (res.status === 200) {\n                    const data = res.data\n                    setInfo(data)\n                }\n                console.log('response', res)\n            })\n            .catch(e => console.log('error', e))\n    }, [])\n\n    return (\n        <Container className=\"my-2\">\n            <h2>Home page</h2>\n            <p>{!!info && JSON.stringify(info)}</p>\n        </Container>\n    )\n}\n\nexport default withAuth(HomePage)\n","import React, {useState} from 'react'\nimport {Button, Container, Form} from 'react-bootstrap'\nimport {Link, Redirect} from 'react-router-dom'\nimport axios from 'axios'\nimport WithAuth from '../hoc/WithAuth'\n\nconst LoginPage = props => {\n    const {user} = props\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const login = async () => {\n        const request = {\n            username: email,\n            password\n        }\n\n        const response = await axios.post('http://erp.apptrix.ru/api/clients/token/', request)\n\n        if (response.status === 200) {\n            const data = response.data\n            user.login(data.client_id, data.access, data.refresh)\n        }\n    }\n\n\n    if (user.authState) {\n        return <Redirect to={{pathname: '/'}}/>\n    } else {\n        return (\n            <Container className=\"col-md-6 mx-auto my-2\">\n                <h2>Please login:</h2>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\"\n                                      onChange={event => setEmail(event.target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\"\n                                      onChange={event => setPassword(event.target.value)}/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"button\" className=\"px-5\"\n                            onClick={login}>\n                        Login...\n                    </Button>\n\n                    <Link to=\"/signup\" className=\"btn btn-info px-5 ml-2\">Sign Up if unregistered</Link>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WithAuth(LoginPage)\n\n","import React, {useState} from 'react'\nimport {Button, Container, Form} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nconst SignupPage = props => {\n  const [email, setEmail] = useState(null)\n  const [password, setPassword] = useState(null)\n  const [invited, setInvited] = useState(null)\n  const [name, setName] = useState(null)\n  const [surname, setSurname] = useState(null)\n\n  const signup = async () => {\n    const request = {\n      user: {email, password},\n      invited_by: invited,\n      name,\n      surname,\n      country_key: 'RU',\n      phone: '+78003002010'\n    }\n\n    console.log('signup', request)\n\n    const response = await axios.post('http://erp.apptrix.ru/api/clients/create/', request)\n  }\n\n\n  return (\n    <Container className=\"col-md-6 mx-auto my-2\">\n      <h2>Please sign up:</h2>\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" name=\"fname\" placeholder=\"Name\"\n                        onChange={event => setName(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Surname</Form.Label>\n          <Form.Control type=\"text\" name=\"lname\" placeholder=\"Surname\"\n                        onChange={event => setSurname(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Invited by </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Invited by\"\n                        onChange={event => setInvited(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n                        onChange={event => setEmail(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\"\n                        onChange={event => setPassword(event.target.value)}/>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"button\" className=\"px-5\"\n                onClick={signup}>\n          Sign Up...\n        </Button>\n\n        <Link to=\"/login\" className=\"btn btn-info px-5 ml-2\">Login if registered</Link>\n      </Form>\n    </Container>\n  )\n}\n\nexport default SignupPage\n","import React, {useEffect} from 'react'\nimport WithAuth from \"../hoc/WithAuth\";\nimport {Redirect} from \"react-router-dom\";\n\nconst LogoutPage = props => {\n    const {user} = props\n\n    useEffect(() => {\n        user.logout()\n        // do logout\n    }, [])\n\n    if (user.authState) {\n        return null\n    } else {\n        return <Redirect push to={{pathname: '/login'}}/>\n    }\n}\n\nexport default WithAuth(LogoutPage)\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport withAuth from './WithAuth'\n\nconst PrivateRoute = (props) => {\n    const {user, component, ...rest} = props\n\n    if (user.authState)\n        return (\n            <Route {...rest} component={component}/>\n        )\n    else\n        return (\n            <Route\n                {...rest}\n                render={\n                    ({location}) =>\n                        <Redirect\n                            to={\n                                {\n                                    pathname: '/login',\n                                    state: {from: location}\n                                }}\n                        />\n                }\n            />\n        )\n}\n\n// export default PrivateRoute\nexport default withAuth(PrivateRoute)\n\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport withAuth from './WithAuth'\n\nconst UnPrivateRoute = (props) => {\n    const {user, component, ...rest} = props\n\n    if (!user.authState)\n        return (\n            <Route {...rest} component={component}/>\n        )\n    else\n        return (\n            <Route\n                {...rest}\n                render={\n                    ({location}) =>\n                        <Redirect\n                            to={\n                                {\n                                    pathname: '/',\n                                    state: {from: location}\n                                }}\n                        />\n                }\n            />\n        )\n}\n\n// export default UnPrivateRoute\nexport default withAuth(UnPrivateRoute)\n\n","import {AuthContext} from \"./authContext\"\nimport React, {useCallback, useEffect, useState} from \"react\"\n\nconst storageName = 'auth'\n\nexport const AuthProvider = ({children}) => {\n\n    const autoLogin = () => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n        let newUser\n        if (data && data.token) {\n            newUser = {\n                authState: !!data.token,\n                client_id: data.client_id,\n                token: data.token,\n                refresh_token: data.refresh_token\n            }\n        } else {\n            newUser = {\n                authState: false\n            }\n        }\n        return newUser\n    }\n\n    const [user, setUser] = useState(() => autoLogin())\n\n    const updateUser = (user) => setUser(user)\n\n    const login = useCallback((client_id, token, refresh_token) => {\n        const newUser = {\n            authState: !!token,\n            client_id: client_id,\n            token: token,\n            refresh_token: refresh_token\n        }\n\n        localStorage.setItem(storageName,\n            JSON.stringify({\n                client_id: client_id,\n                token: token,\n                refresh_token: refresh_token\n            }))\n\n        setUser(newUser)\n    }, [])\n\n    const logout = useCallback(() => {\n        localStorage.removeItem(storageName)\n        setUser({authState: false})\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{user, updateUser, login, logout}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import './App.scss'\nimport React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport NavBar from './components/NavBar/NavBar'\nimport HomePage from './pages/HomePage'\nimport LoginPage from './pages/LoginPage'\nimport SignupPage from './pages/SignupPage'\nimport LogoutPage from './pages/LogoutPage'\nimport PrivateRoute from \"./hoc/PrivateRoute\"\nimport UnPrivateRoute from \"./hoc/UnPrivateRoute\"\nimport {AuthProvider} from \"./context/authProvider\"\n\n\nfunction App() {\n\n    return (\n        <AuthProvider>\n            <NavBar/>\n            <Switch>\n                <UnPrivateRoute path=\"/login\" component={LoginPage}/>\n                <UnPrivateRoute path=\"/signup\" component={SignupPage}/>\n\n                <PrivateRoute path=\"/logout\" component={LogoutPage}/>\n                <PrivateRoute path=\"/\" component={HomePage}/>\n            </Switch>\n        </AuthProvider>\n    )\n}\n\nexport default App\n","const storageName = 'auth'\n\nclass AuthServiceMiddleware {\n  constructor() {\n    this.storageName = storageName\n  }\n\n  onRequest(config) {\n    const data = getAuthFromStorage()\n    if (data && data.token) {\n      console.log('Axios_onRequest middleware with Bearer Token')\n\n      return {\n        ...config,\n        headers: {\n          ...config.headers,\n          'Authorization': `Bearer ${data.token}`\n        }\n      }\n\n    } else {\n      console.log('Axios_onRequest middleware NO Bearer Token')\n      return config\n    }\n  }\n\n  onResponseError(err) {\n    if (err.response.status === 401) {\n      return refreshAccessToken()\n        .then((data) => {\n          setAuthInStorage(data)\n          console.log('Refresh token success')\n        })\n        .catch((error) => {\n          clearAuthInStorage()\n          console.log('Refresh login error: ', error)\n          throw error\n        })\n    }\n    throw err\n  }\n\n}\n\nconst refreshAccessToken = async () => {\n\n  // const data = {\n  //   client_id: client_id,\n  //   token: token,\n  //   refresh_token: refresh_token\n  // }\n\n}\n\nconst getAuthFromStorage = () => {\n  return JSON.parse(localStorage.getItem(storageName))\n}\n\nconst setAuthInStorage = (data) => {\n  localStorage.setItem(storageName,\n    JSON.stringify(data))\n}\n\nconst clearAuthInStorage = () => {\n  localStorage.removeItem(storageName)\n}\n\n\nexport {AuthServiceMiddleware, refreshAccessToken}\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport axios from 'axios'\nimport {Service} from 'axios-middleware'\nimport {AuthServiceMiddleware} from './middleware/authService'\n\nconst service = new Service(axios)\n\nservice.register([\n  new AuthServiceMiddleware()\n])\n\n\nconst app = (\n  <Router>\n    <App/>\n  </Router>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n"],"sourceRoot":""}