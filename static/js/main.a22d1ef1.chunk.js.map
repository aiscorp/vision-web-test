{"version":3,"sources":["context/authContext.js","hoc/WithAuth.js","hoc/IfAuth.js","hoc/IfNotAuth.js","components/NavBar/NavBar.js","pages/HomePage.js","pages/LoginPage.js","pages/SignupPage.js","pages/LogoutPage.js","hoc/PrivateRoute.js","hoc/UnPrivateRoute.js","context/authProvider.js","App.js","middleware/authService.js","index.js"],"names":["AuthContext","React","createContext","withAuth","ComposedComponent","props","useContext","user","login","updateUser","logout","newUser","children","rest","authState","Children","map","child","cloneElement","NavBar","Navbar","collapseOnSelect","expand","bg","variant","to","className","Toggle","aria-controls","Collapse","Nav","exact","activeClassName","HomePage","Container","WithAuth","useState","email","setEmail","password","setPassword","a","request","username","axios","post","response","status","data","client_id","access","refresh","pathname","Form","Group","Label","Control","type","placeholder","onChange","event","target","value","Button","onClick","SignupPage","invited","setInvited","name","setName","surname","setSurname","signup","invited_by","country_key","phone","console","log","useEffect","push","component","render","location","state","from","storageName","AuthProvider","JSON","parse","localStorage","getItem","token","refresh_token","autoLogin","setUser","useCallback","setItem","stringify","removeItem","Provider","App","path","LoginPage","LogoutPage","AuthServiceMiddleware","this","config","getAuthFromStorage","headers","err","refreshAccessToken","then","setAuthInStorage","catch","error","clearAuthInStorage","Service","register","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a22d1ef1.chunk.js","sourcesContent":["import React, {useContext} from 'react'\n\nexport const AuthContext = React.createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\n","import React from 'react'\n\nimport {useAuth} from '../context/authContext'\n\nconst storageName = 'auth'\n\n\nconst withAuth = ComposedComponent => {\n    return ((props) => {\n        const {user, updateUser, login, logout} = useAuth()\n\n        // console.log(user)\n        //\n        // const data = JSON.parse(localStorage.getItem(storageName))\n        //\n        // let newUser\n        // if (data && data.token) {\n        //     newUser = {\n        //         authState: !!data.token,\n        //         client_id: data.client_id,\n        //         token: data.token,\n        //         refresh_token: data.refresh_token,\n        //         login: login,\n        //         logout: logout\n        //     }\n        // } else {\n        //     newUser = {\n        //         authState: false,\n        //         login: login,\n        //         logout: logout\n        //     }\n        // }\n          const newUser = {\n                ...user,\n                login: login,\n                logout: logout\n            }\n\n        return <ComposedComponent user={newUser} {...props}/>\n    })\n}\n\nexport default withAuth\n\n// const withAuth = ComposedComponent => {\n//     return ((props) => {\n//         const {auth, updateAuth} = useAuth()\n//\n//         const login = useCallback((client_id, token, refresh_token) => {\n//             const newUser = {\n//                 authState: !!token,\n//                 client_id: client_id,\n//                 token: token,\n//                 refresh_token: refresh_token\n//             }\n//\n//             localStorage.setItem(storageName,\n//                 JSON.stringify({\n//                     client_id: client_id,\n//                     token: token,\n//                     refresh_token: refresh_token\n//                 }))\n//\n//             updateAuth(newUser)\n//         }, [])\n//\n//         const logout = useCallback(() => {\n//             localStorage.removeItem(storageName)\n//             updateAuth(newUser)\n//         }, [])\n//\n//         const data = JSON.parse(localStorage.getItem(storageName))\n//\n//         let newUser\n//         if (data && data.token) {\n//             newUser = {\n//                 authState: !!data.token,\n//                 client_id: data.client_id,\n//                 token: data.token,\n//                 refresh_token: data.refresh_token,\n//                 login: login,\n//                 logout: logout\n//             }\n//         } else {\n//             newUser = {\n//                 authState: false,\n//                 login: login,\n//                 logout: logout\n//             }\n//         }\n//\n//         return <ComposedComponent user={newUser} {...props}/>\n//     })\n// }\n\n","import React from 'react'\nimport withAuth from './WithAuth'\n\nconst IfAuth = (props) => {\n  const {user, children, ...rest} = props\n\n  if (user.authState)\n    return React.Children.map(children, (child) => {\n        return React.cloneElement(child, {...rest})\n      }\n    )\n  else\n    return null\n}\n\nexport default withAuth(IfAuth)\n","import React from 'react'\nimport withAuth from './WithAuth'\n\nconst IfNotAuth = (props) => {\n  const {user, children, ...rest} = props\n\n  if (!user.authState)\n    return React.Children.map(children, (child) => {\n        return React.cloneElement(child, {...rest})\n      }\n    )\n  else\n    return null\n}\n\nexport default withAuth(IfNotAuth)\n","import React from 'react'\nimport {Link, NavLink} from 'react-router-dom'\nimport {Navbar, Nav} from 'react-bootstrap'\nimport IfAuth from '../../hoc/IfAuth'\nimport IfNotAuth from '../../hoc/IfNotAuth'\n\nconst NavBar = props => {\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Vision web test\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">\n            <IfNotAuth>\n              <NavLink exact to=\"/signup\" activeClassName=\"active\" className=\"nav-link\">Sign Up</NavLink>\n              <NavLink exact to=\"/login\" activeClassName=\"active\" className=\"nav-link\">Login</NavLink>\n            </IfNotAuth>\n\n            <IfAuth>\n              <NavLink exact to=\"/\" activeClassName=\"active\" className=\"nav-link\">Home</NavLink>\n              <NavLink exact to=\"/logout\" activeClassName=\"active\" className=\"nav-link\">Logout</NavLink>\n            </IfAuth>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport {Container} from 'react-bootstrap'\n\nconst HomePage = props => {\n  return (\n    <Container className=\"my-2\">\n      <h2>Home page</h2>\n    </Container>\n  )\n}\n\nexport default HomePage\n","import React, {useState} from 'react'\nimport {Button, Container, Form} from 'react-bootstrap'\nimport {Link, Redirect} from 'react-router-dom'\nimport axios from 'axios'\nimport WithAuth from '../hoc/WithAuth'\n\nconst LoginPage = props => {\n    const {user} = props\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const login = async () => {\n        const request = {\n            username: email,\n            password\n        }\n\n        const response = await axios.post('http://erp.apptrix.ru/api/clients/token/', request)\n\n        if (response.status === 200) {\n            const data = response.data\n            user.login(data.client_id, data.access, data.refresh)\n        }\n    }\n\n\n    if (user.authState) {\n        return <Redirect to={{pathname: '/'}}/>\n    } else {\n        return (\n            <Container className=\"col-md-6 mx-auto my-2\">\n                <h2>Please login:</h2>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\"\n                                      onChange={event => setEmail(event.target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\"\n                                      onChange={event => setPassword(event.target.value)}/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"button\" className=\"px-5\"\n                            onClick={login}>\n                        Login...\n                    </Button>\n\n                    <Link to=\"/signup\" className=\"btn btn-info px-5 ml-2\">Sign Up if unregistered</Link>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default WithAuth(LoginPage)\n\n","import React, {useState} from 'react'\nimport {Button, Container, Form} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nconst SignupPage = props => {\n  const [email, setEmail] = useState(null)\n  const [password, setPassword] = useState(null)\n  const [invited, setInvited] = useState(null)\n  const [name, setName] = useState(null)\n  const [surname, setSurname] = useState(null)\n\n  const signup = async () => {\n    const request = {\n      user: {email, password},\n      invited_by: invited,\n      name,\n      surname,\n      country_key: 'RU',\n      phone: '+78003002010'\n    }\n\n    console.log('signup', request)\n\n    const response = await axios.post('http://erp.apptrix.ru/api/clients/create/', request)\n  }\n\n\n  return (\n    <Container className=\"col-md-6 mx-auto my-2\">\n      <h2>Please sign up:</h2>\n      <Form>\n        <Form.Group>\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" name=\"fname\" placeholder=\"Name\"\n                        onChange={event => setName(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Surname</Form.Label>\n          <Form.Control type=\"text\" name=\"lname\" placeholder=\"Surname\"\n                        onChange={event => setSurname(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Invited by </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Invited by\"\n                        onChange={event => setInvited(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n                        onChange={event => setEmail(event.target.value)}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\"\n                        onChange={event => setPassword(event.target.value)}/>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"button\" className=\"px-5\"\n                onClick={signup}>\n          Sign Up...\n        </Button>\n\n        <Link to=\"/login\" className=\"btn btn-info px-5 ml-2\">Login if registered</Link>\n      </Form>\n    </Container>\n  )\n}\n\nexport default SignupPage\n","import React, {useEffect} from 'react'\nimport WithAuth from \"../hoc/WithAuth\";\nimport {Redirect} from \"react-router-dom\";\n\nconst LogoutPage = props => {\n    const {user} = props\n\n    useEffect(() => {\n        user.logout()\n        // do logout\n    }, [])\n\n    if (user.authState) {\n        return null\n    } else {\n        return <Redirect push to={{pathname: '/login'}}/>\n    }\n}\n\nexport default WithAuth(LogoutPage)\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport withAuth from './WithAuth'\n\nconst PrivateRoute = (props) => {\n    const {user, component, ...rest} = props\n\n    if (user.authState)\n        return (\n            <Route {...rest} component={component}/>\n        )\n    else\n        return (\n            <Route\n                {...rest}\n                render={\n                    ({location}) =>\n                        <Redirect\n                            to={\n                                {\n                                    pathname: '/login',\n                                    state: {from: location}\n                                }}\n                        />\n                }\n            />\n        )\n}\n\n// export default PrivateRoute\nexport default withAuth(PrivateRoute)\n\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport withAuth from './WithAuth'\n\nconst UnPrivateRoute = (props) => {\n    const {user, component, ...rest} = props\n\n    if (!user.authState)\n        return (\n            <Route {...rest} component={component}/>\n        )\n    else\n        return (\n            <Route\n                {...rest}\n                render={\n                    ({location}) =>\n                        <Redirect\n                            to={\n                                {\n                                    pathname: '/',\n                                    state: {from: location}\n                                }}\n                        />\n                }\n            />\n        )\n}\n\n// export default UnPrivateRoute\nexport default withAuth(UnPrivateRoute)\n\n","import {AuthContext} from \"./authContext\"\nimport React, {useCallback, useEffect, useState} from \"react\"\n\nconst storageName = 'auth'\n\nexport const AuthProvider = ({children}) => {\n\n    const autoLogin = () => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n        let newUser\n        if (data && data.token) {\n            newUser = {\n                authState: !!data.token,\n                client_id: data.client_id,\n                token: data.token,\n                refresh_token: data.refresh_token\n            }\n        } else {\n            newUser = {\n                authState: false\n            }\n        }\n        return newUser\n    }\n\n    const [user, setUser] = useState(() => autoLogin())\n\n    const updateUser = (user) => setUser(user)\n\n    const login = useCallback((client_id, token, refresh_token) => {\n        const newUser = {\n            authState: !!token,\n            client_id: client_id,\n            token: token,\n            refresh_token: refresh_token\n        }\n\n        localStorage.setItem(storageName,\n            JSON.stringify({\n                client_id: client_id,\n                token: token,\n                refresh_token: refresh_token\n            }))\n\n        setUser(newUser)\n    }, [])\n\n    const logout = useCallback(() => {\n        localStorage.removeItem(storageName)\n        setUser({authState: false})\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{user, updateUser, login, logout}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import './App.scss'\nimport React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport NavBar from './components/NavBar/NavBar'\nimport HomePage from './pages/HomePage'\nimport LoginPage from './pages/LoginPage'\nimport SignupPage from './pages/SignupPage'\nimport LogoutPage from './pages/LogoutPage'\nimport PrivateRoute from \"./hoc/PrivateRoute\"\nimport UnPrivateRoute from \"./hoc/UnPrivateRoute\"\nimport {AuthProvider} from \"./context/authProvider\"\n\n\nfunction App() {\n\n    return (\n        <AuthProvider>\n            <NavBar/>\n            <Switch>\n                <UnPrivateRoute path=\"/login\" component={LoginPage}/>\n                <UnPrivateRoute path=\"/signup\" component={SignupPage}/>\n\n                <PrivateRoute path=\"/logout\" component={LogoutPage}/>\n                <PrivateRoute path=\"/\" component={HomePage}/>\n            </Switch>\n        </AuthProvider>\n    )\n}\n\nexport default App\n","const storageName = 'auth'\n\nclass AuthServiceMiddleware {\n  constructor() {\n    this.storageName = storageName\n  }\n\n  onRequest(config) {\n    const data = getAuthFromStorage()\n    if (data && data.token) {\n      console.log('Axios_onRequest middleware with Bearer Token')\n\n      return {\n        ...config,\n        headers: {\n          ...config.headers,\n          'Authorization': `Bearer ${data.token}`\n        }\n      }\n\n    } else {\n      console.log('Axios_onRequest middleware NO Bearer Token')\n      return config\n    }\n  }\n\n  onResponseError(err) {\n    if (err.response.status === 401) {\n      return refreshAccessToken()\n        .then((data) => {\n          setAuthInStorage(data)\n          console.log('Refresh token success')\n        })\n        .catch((error) => {\n          clearAuthInStorage()\n          console.log('Refresh login error: ', error)\n          throw error\n        })\n    }\n    throw err\n  }\n\n}\n\nconst refreshAccessToken = async () => {\n\n  // const data = {\n  //   client_id: client_id,\n  //   token: token,\n  //   refresh_token: refresh_token\n  // }\n\n}\n\nconst getAuthFromStorage = () => {\n  return JSON.parse(localStorage.getItem(storageName))\n}\n\nconst setAuthInStorage = (data) => {\n  localStorage.setItem(storageName,\n    JSON.stringify(data))\n}\n\nconst clearAuthInStorage = () => {\n  localStorage.removeItem(storageName)\n}\n\n\nexport {AuthServiceMiddleware, refreshAccessToken}\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport axios from 'axios'\nimport {Service} from 'axios-middleware'\nimport {AuthServiceMiddleware} from './middleware/authService'\n\nconst service = new Service(axios)\n\nservice.register([\n  new AuthServiceMiddleware()\n])\n\n\nconst app = (\n  <Router>\n    <App/>\n  </Router>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n"],"sourceRoot":""}